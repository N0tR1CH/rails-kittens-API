skip
@company.errors
@companies.errors
@company.users << User.where(id: params[:user_ids])
continue
exit
@company
continue
@company
continue
records.to_a
continue
records.to_a
continue
records.to_a
continue
records.to_a
admin.roles
admin
continue
admin
continue
admin
continue
admin
continue
user
house.user
user.houses
user.house
house
continue
house.user
house
user.house
user.houses
continue
records.to_a
continue
records.to_a
continue
user.roles
records.to_a
records
continue
records
continue
records
continue
records.to_a
continue
scope.to_a
scope
newuser
continue
scope.to_a
scope
continue
scope
scop
scope.to_a
exit
scope.to_a.nil?
scope.to_a
scope
continue
account1_house
account1_report
Account2_report
Account1_report
Accoun1_report
scope.to_a
continue
scope
continue
Pundit.policy.scope!(user,House)
exit
Pundit.policy.scope!(user,House)
scope
continue
scope
:scope
scope
continue
resolved_scope
exit
resolved_scope
continue
resolved_scope
continue
@houses
exit
@houses
exit
houses
@houses
continue
exit
continue
user
continue
let{:house}
house
continue
house_params
House.count
:house
house
continue
house_params
house
exit
house.city
house.street
house
exit
current_user.houses.new(house_params)exit
House.create!(street: 'dada', city: 'dasda')
House.create(street: 'dada', city: 'dasda')
current_user.houses.new(house_params)
current_user.houses
current_user
current.user
continue
exit
response.status
response.body
response
exit
response.body
response.boddy
response.status
response
exit
response.status
response
create_request
response.status
exit
response.body
response.boddy
response
exit
response.status
response.body
response
exit
continue
exit
kitten_id.id
:kitten_id
kitten_id
exit
a["id"]
a
a = JSON.parse(response.body)
a = JSON.parse(response)
a = JSON.parse(response.id)
exit
nil.id
kitten.id
kitten
skip
ski[
exit
JSON.parse(response.body)
kitten
kitten.to_h
kitten.stringify_keys
kitten
exit
response.body
get :index
exit
get :index
exit
get '/kittens/'
get '/kittens/
get :index
exit
get :index, format: :json
get :index
exit
get :index
